apply plugin: 'gradlefx'
apply plugin: 'scaffold'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'net.asasyn'
version = '0.0.1'
type = 'swc'

if (!flexHome) {
    flexHome = ""
}

additionalCompilerOptions = [
    '-load-config',
    "${flexHome}/frameworks/air-config.xml",
    "-warnings=false",
    "-show-actionscript-warnings=false",
    "-show-binding-warnings=false",
    "-show-shadowed-device-font-warnings=false",
    "-show-unused-type-selector-warnings=false",
]

configurations {
    deployerJars
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.gradlefx', name: 'gradlefx', version: '1.3.3'
    }
}

repositories {
    mavenCentral()
}

afterEvaluate {
    dependencies {
        external files("${flexHome}/frameworks/libs/air/airglobal.swc")
        external files("${flexHome}/frameworks/libs/air/aircore.swc")
    }
}


dependencies {
}


//generate intellij projct
task intellij(type:IntelliJTask)
class IntelliJTask extends org.gradlefx.ide.tasks.idea.IdeaProject {

  def IntelliJTask() {
    dependsOn("idea")
    dependsOn.remove("scaffold")//scaffoldを無効に
  }

  def addDependencies() {
        editXmlFile project.name + ".iml", { xml ->
            def entries = xml.component.find { it.'@name' == 'FlexBuildConfigurationManager' }
                .configurations.configuration.dependencies.entries.first()
            def rootMgr = xml.component.find { it.'@name' == 'NewModuleRootManager' }

            eachDependencyFile { file, type ->
                def String uuid = file.name
                def entry = new Node(entries, 'entry', ['library-id': uuid])
                new Node(entry, 'dependency', ['linkage': configTypeToLinkageType(type)])

                def orderEntry = new Node(rootMgr, 'orderEntry', [type: "module-library"]);
                def libNode = new Node(orderEntry, 'library', [name: file.name, type: "flex"])
                new Node(libNode, 'properties', [id: uuid])
                def classes = new Node(libNode, 'CLASSES')
                new Node(classes, 'root', [url: "jar://\$MODULE_DIR\$/${org.apache.commons.io.FilenameUtils.separatorsToUnix(project.relativePath(file))}!/"]);
                new Node(libNode, 'JAVADOC');
                new Node(libNode, 'SOURCES');
            }
        }
    }
}
